ggplot(mpg) +
geom_density(aes(x = hwy,
y = after_stat(scaled)))
ggplot(mpg) +
geom_bar(aes(x = class))
ggplot(mpg) +
stat_count(aes(x = class))
ggplot(mpg) +
stat_count(aes(x = class),geom ="line")
ggplot(mpg) +
stat_count(aes(x = class),geom ="points")
ggplot(mpg) +
stat_count(aes(x = class),geom ="point")
ggplot(mpg) +
stat_count(aes(x = class))
ggplot(mpg) +
geom_jitter(aes(x = class, y = hwy),
width = 0.2)
?geom_jitter
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
stat_summary()
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
stat_summary(aes(x = displ, y = hwy))
?stat_summary
attach("ggplot2"")
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
stat_summary(aes(x = displ, y = hwy),
fun =mean,
geom = "point",
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
stat_summary(aes(x = displ, y = hwy),
fun =mean,
geom = "point",
color = "red",
size = 2)
ggplot(mpg) +
geom_point(aes(x = class, y = hwy, colour = class)) +
stat_summary(aes(x = class, y = hwy),
fun =mean,
geom = "point",
color = "red",
size = 2)
ggplot(mpg) +
geom_jitter(aes(x = class, y = hwy),
width = 0.2 )
ggplot(mpg) +
geom_jitter(aes(x = class, y = hwy), width = 0.2 ) +
stat_summary(aes(x = class, y = hwy),
fun =mean,
geom = "point",
color = "red",
size = 2)
?stat_summary
ggplot(mpg) +
geom_jitter(aes(x = class, y = hwy), width = 0.2 ) +
stat_summary(aes(x = class, y = hwy),
fun =mean,
color = "red",
size = 2)
ggplot(mpg) +
geom_jitter(aes(x = class, y = hwy), width = 0.2 ) +
stat_summary(aes(x = class, y = hwy),
fun =mean,
geom = "point",
color = "red",
size = 2)
ggplot(mpg) +
geom_jitter(aes(x = class, y = hwy), width = 0.2 ) +
stat_summary(aes(x = class, y = hwy),
fun =mean,
color = "red",
size = 2)
ggplot(mpg) +
geom_jitter(aes(x = class, y = hwy), width = 0.2 ) +
stat_summary(aes(x = class, y = hwy),
fun =mean,
geom = "point",
color = "red",
size = 2)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class))
?scale_colour_brewer
?scale_colour_brewer
?scale_colour_brewer
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
scale_colour_brewer(type="qual")
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
scale_colour_brewer(type="seq")
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
scale_colour_brewer(type="div")
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
scale_colour_brewer(type="qual")
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
scale_colour_brewer(type = 'qual')
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
scale_x_continuous(breaks = c(3, 5, 6)) +
scale_y_continuous(trans = 'log10')
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
scale_x_continuous(breaks = c(3, 5, 6))
scale_y_continuous(trans = 'log10')
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
scale_x_continuous(breaks = c(3, 5, 6)) +
scale_y_continuous(trans = 'log10')
?scale_x_continuous
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
scale_colour_brewer(type = 'qual')
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
scale_colour_brewer(type = 'div')
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
scale_colour_brewer(type = 'Accent')
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
scale_colour_brewer(type = 'seq')
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
scale_colour_brewer(colour = "set1",type = 'seq')
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
scale_colour_brewer(colour = "set1")
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
scale_colour_brewer(colour = "Set1")
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
scale_colour_brewer(palette =  = "Set1")
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
scale_colour_brewer(palette = "Set1")
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
scale_colour_brewer(palette = "qual")
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
scale_colour_brewer(type = "qual")
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class, size ="cyl")) +
scale_colour_brewer(type = 'qual')
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class, size = cyl)) +
scale_colour_brewer(type = 'qual')
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class, size = cyl = 2)) +
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class, size = cyl)) +
scale_colour_brewer(type = 'qual') +
scale_size(break=c(3,4,5,6))
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class, size = cyl)) +
scale_colour_brewer(type = 'qual') +
scale_size(breaks=c(3,4,5,6))
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class, size = cyl)) +
scale_colour_brewer(type = 'qual') +
scale_size(breaks=c(4,5,6,8))
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class, size = cyl)) +
scale_colour_brewer(type = 'qual') +
scale_radius(breaks=c(4,5,6,8))
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class, size = cyl)) +
scale_colour_brewer(type = 'qual') +
scale_size_area(breaks=c(4,5,6,8))
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class, size = cyl)) +
scale_colour_brewer(type = 'qual') +
scale_size_area(breaks=c(4,5,6,8), max_size = 6)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class, size = cty))
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = cty, size = cty))
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = cty, size = cty)) +
guides(color="legends")
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = cty, size = cty)) +
guides(color="legend")
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = cty, size = cty)) +
scale_size("CTY") +
guides(color="legend")
knitr::opts_chunk$set(echo = TRUE)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~ class)
library(ggplot2)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~ class)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(year ~ drv)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~ drv)
?facet_wrap
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~ drv, scales ="free" )
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~ drv, scales ="free_x" )
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~ drv, scales ="fixed" )
ggplot(mpg) +
geom_bar(aes(y = manufacturer)) +
facet_grid(class ~ .)
ggplot(mpg) +
geom_bar(aes(y = manufacturer)) +
facet_grid(class ~ .,space ="free_y")
ggplot(mpg) +
geom_bar(aes(y = manufacturer)) +
facet_grid(class ~ ., scales = "free_y")
ggplot(mpg) +
geom_bar(aes(y = manufacturer)) +
facet_grid(class ~ ., space ="free_y",scales = "free_y")
knitr::opts_chunk$set(echo = TRUE)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(year ~ drv)
library(ggplot2)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(year ~ drv)
?facet_frid
?facet_grid
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(year ~ drv)
ggplot(mpg) +
geom_bar(aes(x = class)) +
coord_polar()
ggplot(mpg) +
geom_bar(aes(x = class)) +
coord_polar(theta = 'y') +
expand_limits(y = 70)
ggplot(mpg) +
geom_bar(aes(x = class)) +
scale_y_continuous(limits = c(0, 40))
ggplot(mpg) +
geom_bar(aes(x = class), na.rm =TRUE) +
scale_y_continuous(limits = c(0, 40))
ggplot(mpg) +
geom_bar(aes(x = class)) +
coord_cartesian(ylim = c(0, 40))
ggplot(mpg) +
geom_bar(aes(x = class)) +
scale_y_continuous(limits = c(0, 40))
ggplot(mpg) +
geom_point(aes(x = hwy, y = displ))
ggplot(mpg) +
geom_point(aes(x = hwy, y = displ)) +
coord_trans(y="log")
?coord-trans
# Get the borders of all countries
world <- sf::st_as_sf(maps::map('world', plot = FALSE, fill = TRUE))
ggplot(mpg) +
geom_bar(aes(y = class)) +
facet_wrap(~year) +
theme_minimal()
ggplot(mpg) +
geom_bar(aes(y = class)) +
facet_wrap(~year)
ggplot(mpg) +
geom_bar(aes(y = class)) +
facet_wrap(~year) +
theme_minimal()
ggplot(mpg) +
geom_bar(aes(y = class)) +
facet_wrap(~year) +
labs(title = "Number of car models per class",
caption = "source: http://fueleconomy.gov",
x = NULL,
y = NULL) +
scale_x_continuous(expand = c(0, NA)) +
theme_minimal() +
theme(
text = element_text('Avenir Next Condensed'),
strip.text = element_text(face = 'bold', hjust = 0),
plot.caption = element_text(face = 'italic'),
panel.grid.major = element_line('white', size = 0.5),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
panel.ontop = TRUE
)
knitr::opts_chunk$set(echo = TRUE)
packages <- c(
'ggplot2',
'ggrepel',
'patchwork',
'ggraph',
'dplyr',
'gganimate',
'gifski',
'ggforce',
'ggthemes',
'maps',
'sf',
'tidyr',
'concaveman',
'remotes'
)
# Uncomment the next lines (remove the first #) to install the packages
# install.packages(packages)
# remotes::install_github("hrbrmstr/hrbrthemes")
# Load standard packages
library(ggplot2)
# Basic scatterplot
ggplot(data = faithful,
mapping = aes(x = eruptions,
y = waiting)) +
geom_point()
# Data and mapping can be given both as global (in ggplot()) or per layer
ggplot() +
geom_point(mapping = aes(x = eruptions, y = waiting),
data = faithful)
ggplot(faithful) +
geom_point(aes(x = eruptions,
y = waiting,
colour = eruptions < 3))
ggplot(faithful) +
geom_point(aes(x = eruptions,
y = waiting),
colour = 'steelblue')
ggplot(faithful) +
geom_histogram(aes(x = eruptions))
save,image()
save.image()
save.image()
knitr::opts_chunk$set(echo = TRUE)
packages <- c(
'ggplot2',
'ggrepel',
'patchwork',
'ggraph',
'dplyr',
'gganimate',
'gifski',
'ggforce',
'ggthemes',
'maps',
'sf',
'tidyr',
'concaveman',
'remotes'
)
packages <- c(
'ggplot2',
'ggrepel',
'patchwork',
'ggraph',
'dplyr',
'gganimate',
'gifski',
'ggforce',
'ggthemes',
'maps',
'sf',
'tidyr',
'concaveman',
'remotes'
)
# Uncomment the next lines (remove the first #) to install the packages
# install.packages(packages)
# remotes::install_github("hrbrmstr/hrbrthemes")
# Load standard packages
library(ggplot2)
# Basic scatterplot
ggplot(data = faithful,
mapping = aes(x = eruptions,
y = waiting)) +
geom_point()
# Data and mapping can be given both as global (in ggplot()) or per layer
ggplot() +
geom_point(mapping = aes(x = eruptions, y = waiting),
data = faithful)
View(mpg)
ggplot(mpg) +
geom_bar(aes(x = class))
ggplot(mpg_counted) +
geom_bar(aes(x = class, y = count), stat = 'identity')
library(dplyr)
(mpg_counted <- mpg %>%
count(class, name = 'count'))
ggplot(mpg_counted) +
geom_bar(aes(x = class, y = count), stat = 'identity')
ggplot(mpg) +
geom_density(aes(x = hwy,
y = after_stat(scaled)))
ggplot(mpg) +
geom_jitter(aes(x = class, y = hwy), width = 0.2 ) +
stat_summary(aes(x = class, y = hwy),
fun =mean,
geom = "point",
color = "red",
size = 2)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
scale_colour_brewer(type="qual")
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = class)) +
scale_colour_brewer(type = 'qual')
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
scale_x_continuous(breaks = c(3, 5, 6)) +
scale_y_continuous(trans = 'log10')
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = cty, size = cty)) +
scale_size("CTY") +
guides(color="legend")
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, colour = cty, size = cty))
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~ class)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(year ~ drv)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~ drv, scales ="fixed" )
ggplot(mpg) +
geom_bar(aes(y = manufacturer)) +
facet_grid(class ~ ., space ="free_y",scales = "free_y")
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(year ~ drv)
ggplot(mpg) +
geom_bar(aes(x = class)) +
coord_polar()
ggplot(mpg) +
geom_bar(aes(x = class)) +
coord_polar(theta = 'y') +
expand_limits(y = 70)
ggplot(mpg) +
geom_bar(aes(x = class)) +
scale_y_continuous(limits = c(0, 40))
?Coord
ggplot(mpg) +
geom_bar(aes(x = class)) +
coord_cartesian(ylim = c(0, 40))
?Coord
ggplot(mpg) +
geom_bar(aes(y = class)) +
facet_wrap(~year) +
theme_minimal()
ggplot(mpg) +
geom_bar(aes(y = class)) +
facet_wrap(~year) +
labs(title = "Number of car models per class",
caption = "source: http://fueleconomy.gov",
x = NULL,
y = NULL) +
scale_x_continuous(expand = c(0, NA)) +
theme_minimal() +
theme(
text = element_text('Avenir Next Condensed'),
strip.text = element_text(face = 'bold', hjust = 0),
plot.caption = element_text(face = 'italic'),
panel.grid.major = element_line('white', size = 0.5),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
panel.ontop = TRUE
)
ggplot(mpg) +
geom_bar(aes(y = class, fill = drv, ))+
facet_wrap(~year) +
labs(title = "Number of car models per class",
caption = "source: http://fueleconomy.gov",
x = 'Number of cars',
y = NULL)
p3 <- ggplot(msleep) +
geom_point(aes(x = bodywt, y = sleep_total, colour = vore)) +
scale_x_log10()
p <- ggplot(mtcars) +
geom_point(aes(x = disp, y = mpg))
p + p + p
ggplot(mpg) +
geom_bar(aes(x = factor(cyl)))
ggplot(mpg) +
geom_bar(aes(x = factor(cyl))) +
labs(title = 'Number of cars in {closest_state} by number of cylinders') +
transition_states(states = year) +
enter_grow() +
exit_fade()
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
ggtitle("Cars with {closest_state} cylinders") +
transition_states(factor(cyl))
library(ggraph)
library(tidygraph)
graph <- create_notable('zachary') %>%
mutate(clique = as.factor(group_infomap()))
ggraph(graph) +
geom_mark_hull(aes(x, y, fill = clique)) +
geom_edge_link() +
geom_node_point(size = 2)
